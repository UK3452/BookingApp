{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Booking App\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./reserve.css\";\nimport { faCircleXmark, faL } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRooms(checked ? [...selectedRooms, value] : selectedRooms.filter(item => item !== value));\n  };\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your Rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        id: item._id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max People: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            id: roomNumber._id,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: roomNumber._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(roomNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rButton\",\n        onClick: handleClick,\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"sgGmFRi2+y9gipjvFpOK0FbzQf8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Projects/Booking App/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","faL","useFetch","useContext","useState","SearchContext","axios","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","checked","target","value","filter","item","handleClick","Promise","all","map","roomId","res","put","console","log","_id","title","desc","maxPeople","price","roomNumbers","number"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./reserve.css\";\r\nimport { faCircleXmark, faL } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\r\n  const { dates } = useContext(SearchContext);\r\n\r\n  const getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n\r\n    const date = new Date(start.getTime());\r\n\r\n    const dates = [];\r\n\r\n    while (date <= end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n    return dates;\r\n  };\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n  const isAvailable = (roomNumber) => {\r\n    const isFound = roomNumber.unavailableDates.some((date) =>\r\n      alldates.includes(new Date(date).getTime())\r\n    );\r\n    return !isFound;\r\n  };\r\n\r\n  const handleSelect = (e) => {\r\n    const checked = e.target.checked;\r\n    const value = e.target.value;\r\n    setSelectedRooms(\r\n      checked\r\n        ? [...selectedRooms, value]\r\n        : selectedRooms.filter((item) => item !== value)\r\n    );\r\n  };\r\n\r\n\r\n  \r\n  const handleClick = async () => {\r\n    try {\r\n      await Promise.all(\r\n        selectedRooms.map((roomId) => {\r\n          const res = axios.put(`/rooms/availability/${roomId}`, {\r\n            dates: alldates,\r\n          });\r\n          return res.data;\r\n        })\r\n      );\r\n      setOpen(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faCircleXmark}\r\n          className=\"rClose\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n        <span>Select your Rooms:</span>\r\n\r\n        {data.map((item) => (\r\n          <div className=\"rItem\" id={item._id}>\r\n            <div className=\"rItemInfo\">\r\n              <div className=\"rTitle\">{item.title}</div>\r\n              <div className=\"rDesc\">{item.desc}</div>\r\n              <div className=\"rMax\">\r\n                Max People: <b>{item.maxPeople}</b>\r\n              </div>\r\n              <div className=\"rPrice\">{item.price}</div>\r\n            </div>\r\n            <div className=\"rSelectRooms\">\r\n              {item.roomNumbers.map((roomNumber) => (\r\n                <div className=\"room\" id={roomNumber._id}>\r\n                  <label>{roomNumber.number}</label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={roomNumber._id}\r\n                    onChange={handleSelect}\r\n                    disabled={!isAvailable(roomNumber)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button className=\"rButton\" onClick={handleClick}>\r\n          Reserve Now!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}